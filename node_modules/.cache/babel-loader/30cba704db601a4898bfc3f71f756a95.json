{"ast":null,"code":"import \"antd/es/checkbox/style\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/cascader/style\";\nimport _Cascader from \"antd/es/cascader\";\nimport \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport _classCallCheck from \"/Users/lifangzheng/WebstormProjects/SeeDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lifangzheng/WebstormProjects/SeeDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lifangzheng/WebstormProjects/SeeDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lifangzheng/WebstormProjects/SeeDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lifangzheng/WebstormProjects/SeeDream/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/Users/lifangzheng/WebstormProjects/SeeDream/src/user/register.js\";\nimport axios from 'axios';\nimport React from 'react';\nimport './login0.css';\nvar responseCaptcha = {\n  statusCode: '',\n  messageDetail: '',\n  url: '/login'\n};\nvar Option = _Select.Option;\nvar residences = [{\n  value: 'zhejiang',\n  label: 'Zhejiang',\n  children: [{\n    value: 'hangzhou',\n    label: 'Hangzhou',\n    children: [{\n      value: 'xihu',\n      label: 'West Lake'\n    }]\n  }]\n}, {\n  value: 'jiangsu',\n  label: 'Jiangsu',\n  children: [{\n    value: 'nanjing',\n    label: 'Nanjing',\n    children: [{\n      value: 'zhonghuamen',\n      label: 'Zhong Hua Men'\n    }]\n  }]\n}];\n\nvar RegistrationForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(RegistrationForm, _React$Component);\n\n  function RegistrationForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegistrationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegistrationForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false,\n      autoCompleteResult: []\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n\n        var data = new FormData();\n        data.append(\"phone\", values.phone);\n        data.append(\"password\", values.password);\n        data.append(\"verification_code\", values.captcha);\n        data.append(\"user_name\", values.nickname);\n        var url = \"http://47.110.251.127:8000/sign_up/\";\n        axios.post(url, data, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }).then(function (response) {\n          responseCaptcha = response.data;\n          console.log(responseCaptcha.statusCode);\n\n          if (responseCaptcha.statusCode === '0') {\n            _message.success(\"注册成功，马上登录吧！\");\n          } else if (responseCaptcha.statusCode === '502') {\n            _message.info(\"你已经注册过啦~\");\n          } else if (responseCaptcha.statusCode === '503') {\n            _message.error(\"验证码输错了呜呜呜=_=\");\n          } else if (responseCaptcha.statusCode === '504') {\n            _message.warning(\"你还没有获得验证码哦\");\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      });\n\n      _this.alertMessage1();\n    };\n\n    _this.handleSend = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n\n        var url = \"http://47.110.251.127:8000/verification_code/\";\n        var data = new FormData();\n        data.append(\"phone\", values.phone);\n        axios.post(url, data, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }).then(function (response) {\n          console.log(response);\n\n          if (response.data.statusCode === '0') {\n            _message.success(\"验证码发送成功！\");\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      });\n\n      _this.alertMessage0();\n    };\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        confirmDirty: _this.state.confirmDirty || !!value\n      });\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    _this.validateToNextPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    return _this;\n  }\n\n  _createClass(RegistrationForm, [{\n    key: \"alertMessage0\",\n\n    /**\n     * 提示消息\n     * @param\n     */\n    value: function alertMessage0() {\n      _message.success(\"验证码发送成功！\");\n    }\n  }, {\n    key: \"alertMessage1\",\n    value: function alertMessage1() {\n      _message.success(\"注册成功！现在去登录吧\");\n    }\n  }, {\n    key: \"render\",\n\n    /**\n     * 渲染表单\n     * @returns {*}\n     */\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      var tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        }\n      };\n      var prefixSelector = getFieldDecorator('prefix', {\n        initialValue: '86'\n      })( /*#__PURE__*/React.createElement(_Select, {\n        style: {\n          width: 70\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Option, {\n        value: \"86\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }\n      }, \"+86\"), /*#__PURE__*/React.createElement(Option, {\n        value: \"87\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }\n      }, \"+87\")));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(_Form, Object.assign({}, formItemLayout, {\n        onSubmit: this.handleSubmit,\n        style: {\n          width: 450,\n          margin: \"auto\",\n          textAlign: \"center\"\n        },\n        className: \"login-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        style: {\n          paddingTop: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 49\n        }\n      }, \"Welcome to iCube! \\u8D76\\u7D27\\u6CE8\\u518C\\u5427 :)\")), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"E-mail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }\n      }, getFieldDecorator('email', {\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }]\n      })( /*#__PURE__*/React.createElement(_Input, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 32\n        }\n      }))), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"Password\",\n        hasFeedback: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }, {\n          validator: this.validateToNextPassword\n        }]\n      })( /*#__PURE__*/React.createElement(_Input.Password, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 32\n        }\n      }))), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"Confirm Password\",\n        hasFeedback: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }\n      }, getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })( /*#__PURE__*/React.createElement(_Input.Password, {\n        onBlur: this.handleConfirmBlur,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 32\n        }\n      }))), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 33\n          }\n        }, \"Nickname\\xA0\", /*#__PURE__*/React.createElement(_Tooltip, {\n          title: \"What do you want others to call you?\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(_Icon, {\n          type: \"question-circle-o\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }\n      }, getFieldDecorator('nickname', {\n        rules: [{\n          required: true,\n          message: 'Please input your nickname!',\n          whitespace: true\n        }]\n      })( /*#__PURE__*/React.createElement(_Input, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 32\n        }\n      }))), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"Habitual Residence\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 25\n        }\n      }, getFieldDecorator('residence', {\n        initialValue: ['zhejiang', 'hangzhou', 'xihu'],\n        rules: [{\n          type: 'array',\n          required: true,\n          message: 'Please select your habitual residence!'\n        }]\n      })( /*#__PURE__*/React.createElement(_Cascader, {\n        options: residences,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 32\n        }\n      }))), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"Phone Number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }\n      }, getFieldDecorator('phone', {\n        rules: [{\n          required: true,\n          message: 'Please input your phone number!'\n        }]\n      })( /*#__PURE__*/React.createElement(_Input, {\n        addonBefore: prefixSelector,\n        style: {\n          width: 300\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 28\n        }\n      }))), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"Captcha\",\n        extra: \"We must make sure that your are a human.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(_Row, {\n        gutter: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(_Col, {\n        span: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 29\n        }\n      }, getFieldDecorator('captcha', {\n        rules: [{\n          required: true,\n          message: 'Please input the captcha you got!'\n        }]\n      })( /*#__PURE__*/React.createElement(_Input, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 36\n        }\n      }))), /*#__PURE__*/React.createElement(_Col, {\n        span: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(_Button, {\n        onClick: this.handleSend,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 33\n        }\n      }, \"Get captcha\")))), /*#__PURE__*/React.createElement(_Form.Item, Object.assign({}, tailFormItemLayout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }\n      }), getFieldDecorator('agreement', {\n        valuePropName: 'checked'\n      })( /*#__PURE__*/React.createElement(_Checkbox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 29\n        }\n      }, \"I have read the \", /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/iTeam\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 49\n        }\n      }, \"agreement\")))), /*#__PURE__*/React.createElement(_Form.Item, Object.assign({}, tailFormItemLayout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(_Button, {\n        type: \"primary\",\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 29\n        }\n      }, \"Register\")), \"Go to \", /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 31\n        }\n      }, \"login now!\"))));\n    }\n  }]);\n\n  return RegistrationForm;\n}(React.Component);\n\nvar WrappedRegistrationForm = _Form.create({\n  name: 'register'\n})(RegistrationForm);\n\nexport default WrappedRegistrationForm;","map":{"version":3,"sources":["/Users/lifangzheng/WebstormProjects/SeeDream/src/user/register.js"],"names":["axios","React","responseCaptcha","statusCode","messageDetail","url","Option","residences","value","label","children","RegistrationForm","state","confirmDirty","autoCompleteResult","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","console","log","data","FormData","append","phone","password","captcha","nickname","post","headers","then","response","success","info","error","warning","catch","alertMessage1","handleSend","validateFields","alertMessage0","handleConfirmBlur","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","prefixSelector","initialValue","width","margin","textAlign","paddingTop","rules","type","message","required","validator","whitespace","valuePropName","Component","WrappedRegistrationForm","create","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AAEA,IAAIC,eAAe,GAAC;AAChBC,EAAAA,UAAU,EAAC,EADK;AAEhBC,EAAAA,aAAa,EAAE,EAFC;AAGhBC,EAAAA,GAAG,EAAC;AAHY,CAApB;IAMOC,M,WAAAA,M;AAEP,IAAMC,UAAU,GAAG,CACf;AACIC,EAAAA,KAAK,EAAE,UADX;AAEIC,EAAAA,KAAK,EAAE,UAFX;AAGIC,EAAAA,QAAQ,EAAE,CACN;AACIF,IAAAA,KAAK,EAAE,UADX;AAEIC,IAAAA,KAAK,EAAE,UAFX;AAGIC,IAAAA,QAAQ,EAAE,CACN;AACIF,MAAAA,KAAK,EAAE,MADX;AAEIC,MAAAA,KAAK,EAAE;AAFX,KADM;AAHd,GADM;AAHd,CADe,EAiBf;AACID,EAAAA,KAAK,EAAE,SADX;AAEIC,EAAAA,KAAK,EAAE,SAFX;AAGIC,EAAAA,QAAQ,EAAE,CACN;AACIF,IAAAA,KAAK,EAAE,SADX;AAEIC,IAAAA,KAAK,EAAE,SAFX;AAGIC,IAAAA,QAAQ,EAAE,CACN;AACIF,MAAAA,KAAK,EAAE,aADX;AAEIC,MAAAA,KAAK,EAAE;AAFX,KADM;AAHd,GADM;AAHd,CAjBe,CAAnB;;IAmCME,gB;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,YAAY,EAAE,KADV;AAEJC,MAAAA,kBAAkB,EAAE;AAFhB,K;;UASRC,Y,GAAe,UAAAC,CAAC,EAAI;AAChBA,MAAAA,CAAC,CAACC,cAAF;;AACA,YAAKC,KAAL,CAAWC,IAAX,CAAgBC,uBAAhB,CAAwC,UAACC,GAAD,EAAMC,MAAN,EAAiB;AACrD,YAAI,CAACD,GAAL,EAAU;AACNE,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,MAAzC;AACH;;AACD,YAAIG,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,QAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBL,MAAM,CAACM,KAA5B;AACAH,QAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAuBL,MAAM,CAACO,QAA9B;AACAJ,QAAAA,IAAI,CAACE,MAAL,CAAY,mBAAZ,EAAgCL,MAAM,CAACQ,OAAvC;AACAL,QAAAA,IAAI,CAACE,MAAL,CAAY,WAAZ,EAAwBL,MAAM,CAACS,QAA/B;AACA,YAAI1B,GAAG,GAAG,qCAAV;AACAL,QAAAA,KAAK,CAACgC,IAAN,CAAW3B,GAAX,EAAgBoB,IAAhB,EAAqB;AACjBQ,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX;AADQ,SAArB,EAKKC,IALL,CAKU,UAAUC,QAAV,EAAoB;AACtBjC,UAAAA,eAAe,GAACiC,QAAQ,CAACV,IAAzB;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAYtB,eAAe,CAACC,UAA5B;;AACA,cAAGD,eAAe,CAACC,UAAhB,KAA6B,GAAhC,EAAoC;AAChC,qBAAQiC,OAAR,CAAgB,aAAhB;AACH,WAFD,MAEM,IAAGlC,eAAe,CAACC,UAAhB,KAA6B,KAAhC,EAAsC;AACxC,qBAAQkC,IAAR,CAAa,UAAb;AACH,WAFK,MAEA,IAAGnC,eAAe,CAACC,UAAhB,KAA6B,KAAhC,EAAsC;AACxC,qBAAQmC,KAAR,CAAc,cAAd;AACH,WAFK,MAEA,IAAGpC,eAAe,CAACC,UAAhB,KAA6B,KAAhC,EAAsC;AACxC,qBAAQoC,OAAR,CAAgB,YAAhB;AACH;AACJ,SAjBL,EAkBKC,KAlBL,CAkBW,UAAUF,KAAV,EAAiB;AACpBf,UAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACH,SApBL;AAqBH,OA/BD;;AAgCA,YAAKG,aAAL;AACH,K;;UAMDC,U,GAAa,UAAA1B,CAAC,EAAI;AACdA,MAAAA,CAAC,CAACC,cAAF;;AACA,YAAKC,KAAL,CAAWC,IAAX,CAAgBwB,cAAhB,CAA+B,UAACtB,GAAD,EAAMC,MAAN,EAAiB;AAC5C,YAAI,CAACD,GAAL,EAAU;AACNE,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,MAAzC;AACH;;AACD,YAAIjB,GAAG,GAAG,+CAAV;AACA,YAAIoB,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,QAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBL,MAAM,CAACM,KAA5B;AACA5B,QAAAA,KAAK,CAACgC,IAAN,CAAW3B,GAAX,EAAgBoB,IAAhB,EAAsB;AAClBQ,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX;AADS,SAAtB,EAKKC,IALL,CAKU,UAAUC,QAAV,EAAoB;AACtBZ,UAAAA,OAAO,CAACC,GAAR,CAAYW,QAAZ;;AACA,cAAGA,QAAQ,CAACV,IAAT,CAActB,UAAd,KAA2B,GAA9B,EAAkC;AAC9B,qBAAQiC,OAAR,CAAgB,UAAhB;AACH;AACJ,SAVL,EAWKI,KAXL,CAWW,UAAUF,KAAV,EAAiB;AACpBf,UAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACH,SAbL;AAcH,OArBD;;AAsBA,YAAKM,aAAL;AACH,K;;UAaDC,iB,GAAoB,UAAA7B,CAAC,EAAI;AAAA,UACdR,KADc,GACLQ,CAAC,CAAC8B,MADG,CACdtC,KADc;;AAErB,YAAKuC,QAAL,CAAc;AAAClC,QAAAA,YAAY,EAAE,MAAKD,KAAL,CAAWC,YAAX,IAA2B,CAAC,CAACL;AAA5C,OAAd;AACH,K;;UAEDwC,sB,GAAyB,UAACC,IAAD,EAAOzC,KAAP,EAAc0C,QAAd,EAA2B;AAAA,UACzC/B,IADyC,GACjC,MAAKD,KAD4B,CACzCC,IADyC;;AAEhD,UAAIX,KAAK,IAAIA,KAAK,KAAKW,IAAI,CAACgC,aAAL,CAAmB,UAAnB,CAAvB,EAAuD;AACnDD,QAAAA,QAAQ,CAAC,+CAAD,CAAR;AACH,OAFD,MAEO;AACHA,QAAAA,QAAQ;AACX;AACJ,K;;UAEDE,sB,GAAyB,UAACH,IAAD,EAAOzC,KAAP,EAAc0C,QAAd,EAA2B;AAAA,UACzC/B,IADyC,GACjC,MAAKD,KAD4B,CACzCC,IADyC;;AAEhD,UAAIX,KAAK,IAAI,MAAKI,KAAL,CAAWC,YAAxB,EAAsC;AAClCM,QAAAA,IAAI,CAACwB,cAAL,CAAoB,CAAC,SAAD,CAApB,EAAiC;AAACU,UAAAA,KAAK,EAAE;AAAR,SAAjC;AACH;;AACDH,MAAAA,QAAQ;AACX,K;;;;;;;;AA/BD;;;;oCAIe;AACX,eAAQd,OAAR,CAAgB,UAAhB;AACH;;;oCACc;AACX,eAAQA,OAAR,CAAgB,aAAhB;AACH;;;;AAwBD;;;;6BAIS;AAAA,UACEkB,iBADF,GACuB,KAAKpC,KAAL,CAAWC,IADlC,CACEmC,iBADF;AAGL,UAAMC,cAAc,GAAG;AACnBC,QAAAA,QAAQ,EAAE;AACNC,UAAAA,EAAE,EAAE;AAACC,YAAAA,IAAI,EAAE;AAAP,WADE;AAENC,UAAAA,EAAE,EAAE;AAACD,YAAAA,IAAI,EAAE;AAAP;AAFE,SADS;AAKnBE,QAAAA,UAAU,EAAE;AACRH,UAAAA,EAAE,EAAE;AAACC,YAAAA,IAAI,EAAE;AAAP,WADI;AAERC,UAAAA,EAAE,EAAE;AAACD,YAAAA,IAAI,EAAE;AAAP;AAFI;AALO,OAAvB;AAUA,UAAMG,kBAAkB,GAAG;AACvBD,QAAAA,UAAU,EAAE;AACRH,UAAAA,EAAE,EAAE;AACAC,YAAAA,IAAI,EAAE,EADN;AAEAI,YAAAA,MAAM,EAAE;AAFR,WADI;AAKRH,UAAAA,EAAE,EAAE;AACAD,YAAAA,IAAI,EAAE,EADN;AAEAI,YAAAA,MAAM,EAAE;AAFR;AALI;AADW,OAA3B;AAYA,UAAMC,cAAc,GAAGT,iBAAiB,CAAC,QAAD,EAAW;AAC/CU,QAAAA,YAAY,EAAE;AADiC,OAAX,CAAjB,eAGnB;AAAQ,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CAHmB,CAAvB;AAUA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,6CAAUV,cAAV;AAA0B,QAAA,QAAQ,EAAE,KAAKxC,YAAzC;AAAuD,QAAA,KAAK,EAAE;AAACkD,UAAAA,KAAK,EAAE,GAAR;AAAYC,UAAAA,MAAM,EAAC,MAAnB;AAA0BC,UAAAA,SAAS,EAAC;AAApC,SAA9D;AAA6G,QAAA,SAAS,EAAC,YAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACI;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAC;AAAZ,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAA5B,CADJ,eAEQ,0BAAM,IAAN;AAAW,QAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKd,iBAAiB,CAAC,OAAD,EAAU;AACxBe,QAAAA,KAAK,EAAE,CACH;AACIC,UAAAA,IAAI,EAAE,OADV;AAEIC,UAAAA,OAAO,EAAE;AAFb,SADG,EAKH;AACIC,UAAAA,QAAQ,EAAE,IADd;AAEID,UAAAA,OAAO,EAAE;AAFb,SALG;AADiB,OAAV,CAAjB,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CADL,CAFR,eAgBQ,0BAAM,IAAN;AAAW,QAAA,KAAK,EAAC,UAAjB;AAA4B,QAAA,WAAW,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKjB,iBAAiB,CAAC,UAAD,EAAa;AAC3Be,QAAAA,KAAK,EAAE,CACH;AACIG,UAAAA,QAAQ,EAAE,IADd;AAEID,UAAAA,OAAO,EAAE;AAFb,SADG,EAKH;AACIE,UAAAA,SAAS,EAAE,KAAKrB;AADpB,SALG;AADoB,OAAb,CAAjB,eAUE,2BAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADL,CAhBR,eA6BQ,0BAAM,IAAN;AAAW,QAAA,KAAK,EAAC,kBAAjB;AAAoC,QAAA,WAAW,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKE,iBAAiB,CAAC,SAAD,EAAY;AAC1Be,QAAAA,KAAK,EAAE,CACH;AACIG,UAAAA,QAAQ,EAAE,IADd;AAEID,UAAAA,OAAO,EAAE;AAFb,SADG,EAKH;AACIE,UAAAA,SAAS,EAAE,KAAKzB;AADpB,SALG;AADmB,OAAZ,CAAjB,eAUE,2BAAO,QAAP;AAAgB,QAAA,MAAM,EAAE,KAAKH,iBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADL,CA7BR,eA0CQ,0BAAM,IAAN;AACI,QAAA,KAAK,eACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAEI;AAAS,UAAA,KAAK,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACZ;AAAM,UAAA,IAAI,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADY,CAFJ,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUKS,iBAAiB,CAAC,UAAD,EAAa;AAC3Be,QAAAA,KAAK,EAAE,CAAC;AAAEG,UAAAA,QAAQ,EAAE,IAAZ;AAAkBD,UAAAA,OAAO,EAAE,6BAA3B;AAA0DG,UAAAA,UAAU,EAAE;AAAtE,SAAD;AADoB,OAAb,CAAjB,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAVL,CA1CR,eAwDQ,0BAAM,IAAN;AAAW,QAAA,KAAK,EAAC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKpB,iBAAiB,CAAC,WAAD,EAAc;AAC5BU,QAAAA,YAAY,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,MAAzB,CADc;AAE5BK,QAAAA,KAAK,EAAE,CACH;AAAEC,UAAAA,IAAI,EAAE,OAAR;AAAiBE,UAAAA,QAAQ,EAAE,IAA3B;AAAiCD,UAAAA,OAAO,EAAE;AAA1C,SADG;AAFqB,OAAd,CAAjB,eAKE;AAAU,QAAA,OAAO,EAAEhE,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADL,CAxDR,eAgEI,0BAAM,IAAN;AAAW,QAAA,KAAK,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK+C,iBAAiB,CAAC,OAAD,EAAU;AACxBe,QAAAA,KAAK,EAAE,CAAC;AAACG,UAAAA,QAAQ,EAAE,IAAX;AAAiBD,UAAAA,OAAO,EAAE;AAA1B,SAAD;AADiB,OAAV,CAAjB,eAEE;AAAO,QAAA,WAAW,EAAER,cAApB;AAAoC,QAAA,KAAK,EAAE;AAACE,UAAAA,KAAK,EAAE;AAAR,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADL,CAhEJ,eAqEI,0BAAM,IAAN;AAAW,QAAA,KAAK,EAAC,SAAjB;AAA2B,QAAA,KAAK,EAAC,0CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,MAAM,EAAE,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKX,iBAAiB,CAAC,SAAD,EAAY;AAC1Be,QAAAA,KAAK,EAAE,CAAC;AAACG,UAAAA,QAAQ,EAAE,IAAX;AAAiBD,UAAAA,OAAO,EAAE;AAA1B,SAAD;AADmB,OAAZ,CAAjB,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADL,CADJ,eAMI;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,OAAO,EAAE,KAAK7B,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CANJ,CADJ,CArEJ,eAiFI,0BAAM,IAAN,oBAAemB,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACKP,iBAAiB,CAAC,WAAD,EAAc;AAC5BqB,QAAAA,aAAa,EAAE;AADa,OAAd,CAAjB,eAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACoB;AAAG,QAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADpB,CAHH,CADL,CAjFJ,eA0FI,0BAAM,IAAN,oBAAed,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACI;AAAG,QAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,OAAO,EAAE,KAAK9C,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,yBAMU;AAAG,QAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANV,CA1FJ,CADJ,CADJ;AAuGH;;;;EA7P0Bd,KAAK,CAAC2E,S;;AAgQrC,IAAMC,uBAAuB,GAAG,MAAKC,MAAL,CAAY;AAACC,EAAAA,IAAI,EAAE;AAAP,CAAZ,EAAgCpE,gBAAhC,CAAhC;;AACA,eAAekE,uBAAf","sourcesContent":["/**\n * @Author 肖敏\n * @create 2019-11-27\n */\nimport {\n    Form,\n    Input,\n    Tooltip,\n    Icon,\n    Cascader,\n    Select,\n    Row,\n    Col,\n    Checkbox,\n    Button,\n    Alert,\n    message\n} from 'antd';\nimport axios from 'axios';\nimport React from 'react';\nimport './login0.css';\n\nlet responseCaptcha={\n    statusCode:'',\n    messageDetail: '',\n    url:'/login'\n};\n\nconst {Option} = Select;\n\nconst residences = [\n    {\n        value: 'zhejiang',\n        label: 'Zhejiang',\n        children: [\n            {\n                value: 'hangzhou',\n                label: 'Hangzhou',\n                children: [\n                    {\n                        value: 'xihu',\n                        label: 'West Lake',\n                    },\n                ],\n            },\n        ],\n    },\n    {\n        value: 'jiangsu',\n        label: 'Jiangsu',\n        children: [\n            {\n                value: 'nanjing',\n                label: 'Nanjing',\n                children: [\n                    {\n                        value: 'zhonghuamen',\n                        label: 'Zhong Hua Men',\n                    },\n                ],\n            },\n        ],\n    },\n];\n\nclass RegistrationForm extends React.Component {\n    state = {\n        confirmDirty: false,\n        autoCompleteResult: [],\n    };\n\n    /**\n     * 验证是否注册成功\n     * @param e\n     */\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n            let data = new FormData();\n            data.append(\"phone\", values.phone);\n            data.append(\"password\",values.password);\n            data.append(\"verification_code\",values.captcha);\n            data.append(\"user_name\",values.nickname);\n            let url = \"http://47.110.251.127:8000/sign_up/\";\n            axios.post(url, data,{\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            })\n                .then(function (response) {\n                    responseCaptcha=response.data;\n                    console.log(responseCaptcha.statusCode);\n                    if(responseCaptcha.statusCode==='0'){\n                        message.success(\"注册成功，马上登录吧！\");\n                    }else if(responseCaptcha.statusCode==='502'){\n                        message.info(\"你已经注册过啦~\");\n                    }else if(responseCaptcha.statusCode==='503'){\n                        message.error(\"验证码输错了呜呜呜=_=\");\n                    }else if(responseCaptcha.statusCode==='504'){\n                        message.warning(\"你还没有获得验证码哦\");\n                    }\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        });\n        this.alertMessage1();\n    };\n\n    /**\n     * 请求验证码\n     * @param e\n     */\n    handleSend = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n            let url = \"http://47.110.251.127:8000/verification_code/\";\n            let data = new FormData();\n            data.append(\"phone\", values.phone);\n            axios.post(url, data, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            })\n                .then(function (response) {\n                    console.log(response);\n                    if(response.data.statusCode==='0'){\n                        message.success(\"验证码发送成功！\")\n                    }\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        });\n        this.alertMessage0();\n    };\n\n    /**\n     * 提示消息\n     * @param\n     */\n    alertMessage0(){\n        message.success(\"验证码发送成功！\");\n    }\n    alertMessage1(){\n        message.success(\"注册成功！现在去登录吧\");\n    }\n\n    handleConfirmBlur = e => {\n        const {value} = e.target;\n        this.setState({confirmDirty: this.state.confirmDirty || !!value});\n    };\n\n    compareToFirstPassword = (rule, value, callback) => {\n        const {form} = this.props;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('Two passwords that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    };\n\n    validateToNextPassword = (rule, value, callback) => {\n        const {form} = this.props;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], {force: true});\n        }\n        callback();\n    };\n\n    /**\n     * 渲染表单\n     * @returns {*}\n     */\n    render() {\n        const {getFieldDecorator} = this.props.form;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: {span: 24},\n                sm: {span: 8},\n            },\n            wrapperCol: {\n                xs: {span: 24},\n                sm: {span: 16},\n            },\n        };\n        const tailFormItemLayout = {\n            wrapperCol: {\n                xs: {\n                    span: 24,\n                    offset: 0,\n                },\n                sm: {\n                    span: 16,\n                    offset: 8,\n                },\n            },\n        };\n        const prefixSelector = getFieldDecorator('prefix', {\n            initialValue: '86',\n        })(\n            <Select style={{width: 70}}>\n                <Option value=\"86\">+86</Option>\n                <Option value=\"87\">+87</Option>\n            </Select>,\n        );\n\n\n        return (\n            <div>\n                <Form {...formItemLayout} onSubmit={this.handleSubmit} style={{width: 450,margin:\"auto\",textAlign:\"center\"}} className=\"login-form\">\n                    <h2 style={{paddingTop:20}}><b>Welcome to iCube! 赶紧注册吧 :)</b></h2>\n                        <Form.Item label=\"E-mail\">\n                            {getFieldDecorator('email', {\n                                rules: [\n                                    {\n                                        type: 'email',\n                                        message: 'The input is not valid E-mail!',\n                                    },\n                                    {\n                                        required: true,\n                                        message: 'Please input your E-mail!',\n                                    },\n                                ],\n                            })(<Input />)}\n                        </Form.Item>\n                        <Form.Item label=\"Password\" hasFeedback>\n                            {getFieldDecorator('password', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: 'Please input your password!',\n                                    },\n                                    {\n                                        validator: this.validateToNextPassword,\n                                    },\n                                ],\n                            })(<Input.Password />)}\n                        </Form.Item>\n                        <Form.Item label=\"Confirm Password\" hasFeedback>\n                            {getFieldDecorator('confirm', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: 'Please confirm your password!',\n                                    },\n                                    {\n                                        validator: this.compareToFirstPassword,\n                                    },\n                                ],\n                            })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n                        </Form.Item>\n                        <Form.Item\n                            label={\n                                <span>\n                      Nickname&nbsp;\n                                    <Tooltip title=\"What do you want others to call you?\">\n                        <Icon type=\"question-circle-o\" />\n                      </Tooltip>\n                    </span>\n                            }\n                        >\n                            {getFieldDecorator('nickname', {\n                                rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\n                            })(<Input />)}\n                        </Form.Item>\n                        <Form.Item label=\"Habitual Residence\">\n                            {getFieldDecorator('residence', {\n                                initialValue: ['zhejiang', 'hangzhou', 'xihu'],\n                                rules: [\n                                    { type: 'array', required: true, message: 'Please select your habitual residence!' },\n                                ],\n                            })(<Cascader options={residences} />)}\n                        </Form.Item>\n                    <Form.Item label=\"Phone Number\">\n                        {getFieldDecorator('phone', {\n                            rules: [{required: true, message: 'Please input your phone number!'}],\n                        })(<Input addonBefore={prefixSelector} style={{width: 300}}/>)}\n                    </Form.Item>\n                    <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\n                        <Row gutter={8}>\n                            <Col span={12}>\n                                {getFieldDecorator('captcha', {\n                                    rules: [{required: true, message: 'Please input the captcha you got!'}],\n                                })(<Input/>)}\n                            </Col>\n                            <Col span={12}>\n                                <Button onClick={this.handleSend} >Get captcha</Button>\n                            </Col>\n                        </Row>\n                    </Form.Item>\n                    <Form.Item {...tailFormItemLayout}>\n                        {getFieldDecorator('agreement', {\n                            valuePropName: 'checked',\n                        })(\n                            <Checkbox>\n                                I have read the <a href=\"/iTeam\">agreement</a>\n                            </Checkbox>,\n                        )}\n                    </Form.Item>\n                    <Form.Item {...tailFormItemLayout}>\n                        <a href='/login'>\n                            <Button type=\"primary\" onClick={this.handleSubmit}>\n                                Register\n                            </Button>\n                        </a>\n                        Go to <a href=\"/login\">login now!</a>\n                    </Form.Item>\n                </Form>\n            </div>\n        );\n    }\n}\n\nconst WrappedRegistrationForm = Form.create({name: 'register'})(RegistrationForm);\nexport default WrappedRegistrationForm;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}