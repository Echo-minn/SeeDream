{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _tweenFunctions = require('tween-functions');\n\nvar _tweenFunctions2 = _interopRequireDefault(_tweenFunctions);\n\nvar _raf = require('raf');\n\nvar _raf2 = _interopRequireDefault(_raf);\n\nvar _EventDispatcher = require('./EventDispatcher');\n\nvar _EventDispatcher2 = _interopRequireDefault(_EventDispatcher);\n\nvar _util = require('./util');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n} // 设置默认数据\n\n\nfunction defaultData(vars) {\n  return {\n    ease: vars.ease || 'easeInOutQuad',\n    duration: vars.duration || 450,\n    docHeight: vars.docHeight,\n    scrollInterval: vars.scrollInterval || 1000,\n    loop: vars.loop || false,\n    location: vars.location || []\n  };\n}\n\nvar passive = (0, _util.getPassive)();\n\nvar ScrollScreenClass = function ScrollScreenClass() {\n  var _this = this;\n\n  (0, _classCallCheck3['default'])(this, ScrollScreenClass);\n\n  this.init = function (vars) {\n    _this.vars = defaultData(vars || {});\n    _this.rafID = -1;\n    _this.toHeight = -1;\n    _this.num = 0;\n\n    if (_util.windowIsUndefined) {\n      return;\n    }\n\n    _EventDispatcher2['default'].addEventListener('wheel.scrollWheel', _this.onWheel, null, passive); // dom 在 didMount 后高度没出来，加 setTimeout; \n\n\n    setTimeout(_this.startScroll);\n  };\n\n  this.unMount = function () {\n    _EventDispatcher2['default'].removeEventListener('wheel.scrollWheel', _this.onWheel);\n  };\n\n  this.setCurrentNNum = function () {\n    var mapped = _this.mapped;\n    var winHeight = (0, _util.windowHeight)();\n\n    if (!mapped.length) {\n      // 如果是空，采用一屏一滚;\n      var docHeight = _this.vars.docHeight || document.body.scrollHeight;\n      var scrollTopNum = _this.scrollTop / winHeight;\n      var docTopNum = docHeight / winHeight;\n      var docEndScreenHeight = docHeight % winHeight;\n      var currentOffset = _this.scrollTop % winHeight;\n      var currentTopScreen = Math.floor(scrollTopNum); // 判断最后一屏是否过中间 \n\n      var currentScreen = Math.ceil(scrollTopNum) === Math.floor(docTopNum) ? currentOffset / docEndScreenHeight : currentOffset / winHeight;\n      _this.num = Math.round(currentTopScreen + currentScreen);\n      _this.toHeight = _this.num * winHeight;\n    } else {\n      mapped.forEach(function (dom, i) {\n        var domOffsetTop = dom.offsetTop;\n        var domHeight = dom.getBoundingClientRect().height;\n\n        if (_this.scrollTop >= domOffsetTop && _this.scrollTop < domOffsetTop + domHeight) {\n          var exceed = (_this.scrollTop - dom.offsetTop) / domHeight; // 当前屏超过80%到下半屏, scrollOverPack 会动态改高度；\n\n          exceed = exceed > 0.8 ? 1 : 0;\n          _this.num = i + exceed;\n          _this.toHeight = domOffsetTop + exceed * domHeight;\n        }\n      });\n      var tooNum = void 0;\n      var endDom = mapped[mapped.length - 1];\n      var startDom = mapped[0];\n      var startManyHeight = startDom.offsetTop;\n\n      if (_this.scrollTop > endDom.offsetTop + endDom.getBoundingClientRect().height) {\n        tooNum = Math.ceil((_this.scrollTop - endDom.offsetTop - endDom.getBoundingClientRect().height) / winHeight);\n        _this.num = mapped.length + tooNum;\n        _this.toHeight = endDom.offsetTop + endDom.getBoundingClientRect().height + tooNum * winHeight;\n      } else if (_this.scrollTop < startManyHeight) {\n        var t = _this.scrollTop - startManyHeight;\n        tooNum = t > 0 ? Math.ceil(t / winHeight) : Math.floor(t / winHeight);\n        _this.num = tooNum;\n        var tc = Math.ceil(startManyHeight / winHeight);\n        _this.toHeight = (tc + tooNum) * winHeight;\n      }\n    }\n  };\n\n  this.startScroll = function () {\n    var mapped = _this.vars.location.map(function (str) {\n      return document.getElementById(str);\n    }).filter(function (c) {\n      return c;\n    });\n\n    _this.mapped = mapped;\n    _this.scrollTop = (0, _util.currentScrollTop)();\n    _this.animEndScrollTop = _this.scrollTop;\n\n    _this.setCurrentNNum();\n\n    if (mapped[0] && mapped[0].offsetTop >= (0, _util.windowHeight)()) {\n      console.warn('Warning: The first screen is not at the top, which may lead to poor scrolling effect, \"' + _this.vars.location[0] + '\" offsetTop ' + mapped[0].offsetTop + 'px.');\n    }\n\n    if (_this.toHeight !== _this.scrollTop) {\n      _this.initTime = Date.now();\n      _this.rafID = (0, _raf2['default'])(_this.raf);\n    } else {\n      _this.toHeight = -1;\n    }\n  };\n\n  this.raf = function () {\n    var duration = _this.vars.duration;\n    var now = Date.now();\n    var progressTime = now - _this.initTime > duration ? duration : now - _this.initTime;\n\n    var easeValue = _tweenFunctions2['default'][_this.vars.ease](progressTime, _this.scrollTop, _this.toHeight, duration);\n\n    _this.animEndScrollTop = easeValue;\n    window.scrollTo(window.scrollX, easeValue);\n\n    if (progressTime === duration) {\n      _this.cancelRequestAnimationFrame();\n\n      setTimeout(function () {\n        _this.toHeight = -1;\n      }, _this.vars.scrollInterval);\n    } else {\n      _this.rafID = (0, _raf2['default'])(_this.raf);\n    }\n  };\n\n  this.cancelRequestAnimationFrame = function () {\n    _raf2['default'].cancel(_this.rafID);\n\n    _this.rafID = -1;\n  };\n\n  this.getComputedStyle = function (dom) {\n    return dom && document.defaultView && document.defaultView.getComputedStyle ? document.defaultView.getComputedStyle(dom) : {};\n  };\n\n  this.isScroll = function (dom) {\n    var style = _this.getComputedStyle(dom);\n\n    var overflow = style.overflow;\n    var overflowY = style.overflowY;\n    var isScrollOverflow = overflow === 'auto' || overflow === 'scroll' || overflow === 'overlay' || overflowY === 'auto' || overflowY === 'scroll' || overflowY === 'overlay'; // dom.parentNode === document 解决在滚动条上滚动取不到 body;\n\n    if (dom === document.body || !dom || dom.parentNode === document) {\n      return false;\n    } else if (dom.scrollHeight > dom.offsetHeight && isScrollOverflow && dom.scrollTop < dom.scrollHeight) {\n      return true;\n    }\n\n    return _this.isScroll(dom.parentNode);\n  };\n\n  this.limitNum = function (min, max) {\n    if (_this.vars.loop) {\n      _this.num = _this.num < min ? max : _this.num;\n      _this.num = _this.num > max ? min : _this.num;\n    } else {\n      _this.num = _this.num < min ? min : _this.num;\n      _this.num = _this.num > max ? max : _this.num;\n    }\n  };\n\n  this.onWheel = function (e) {\n    e.preventDefault();\n\n    if (_this.isScroll(e.target)) {\n      return;\n    }\n\n    var deltaY = e.deltaY;\n    var mapped = _this.mapped;\n\n    if (_this.rafID === -1 && deltaY !== 0 && _this.toHeight === -1) {\n      var winHeight = (0, _util.windowHeight)();\n      _this.scrollTop = (0, _util.currentScrollTop)();\n      var docHeight = _this.vars.docHeight || document.body.scrollHeight;\n\n      if (_this.animEndScrollTop !== _this.scrollTop) {\n        _this.setCurrentNNum();\n      }\n\n      if (deltaY < 0) {\n        _this.num--;\n      } else if (deltaY > 0) {\n        _this.num++;\n      }\n\n      if (mapped.length) {\n        var endDom = mapped[mapped.length - 1];\n        var startDom = mapped[0];\n        var startManyHeight = startDom.offsetTop;\n        var startManyScale = startManyHeight ? Math.ceil(startManyHeight / winHeight) : 0;\n        var manyHeight = docHeight - endDom.offsetTop - endDom.getBoundingClientRect().height;\n        var manyScale = manyHeight ? Math.ceil(manyHeight / winHeight) : 0;\n\n        _this.limitNum(-startManyScale, mapped.length - 1 + manyScale);\n\n        var currentDom = mapped[_this.num];\n        _this.toHeight = currentDom ? currentDom.offsetTop : (startManyScale + _this.num) * winHeight;\n        _this.toHeight = _this.toHeight < 0 ? 0 : _this.toHeight;\n        _this.toHeight = _this.toHeight > docHeight - winHeight ? docHeight - winHeight : _this.toHeight;\n      } else {\n        _this.limitNum(0, Math.floor(docHeight / winHeight));\n\n        _this.toHeight = winHeight * _this.num;\n      }\n\n      _this.initTime = Date.now();\n      _this.rafID = (0, _raf2['default'])(_this.raf);\n    }\n  };\n};\n\nvar ScrollScreen = new ScrollScreenClass();\nexports['default'] = {\n  init: ScrollScreen.init,\n  unMount: ScrollScreen.unMount\n};\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}